# 使用 Python 3.9 作为基础镜像
FROM python:3.9-slim
# 使用 Alpine Linux 作为基础镜像（更轻量，内存占用更少）
# FROM python:3.9-alpine

# 设置工作目录
WORKDIR /app

# 设置环境变量
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV CUDA_VISIBLE_DEVICES=""
ENV MILVUS_MODE=embedded
# 防止 debconf 交互式提示
ENV DEBIAN_FRONTEND=noninteractive
ENV DEBCONF_NONINTERACTIVE_SEEN=true

# 使用备用阿里云镜像源并安装最小系统依赖
# COPY sources.list /etc/apt/sources.list
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    wget \
    build-essential \
    libssl-dev \
    libffi-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*
# 安装系统依赖（Alpine 使用 apk 而不是 apt）
# RUN apk add --no-cache \
#     curl \
#     wget \
#     build-base \
#     openssl-dev \
#     libffi-dev \
#     python3-dev \
#     musl-dev \
#     linux-headers

# 复制依赖文件
COPY requirements-cpu.txt requirements.txt

# 安装 Python 依赖 (CPU 版本，使用国内镜像源)
RUN pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple/


# 复制应用代码
COPY . .

# 创建必要的目录
RUN mkdir -p /app/logs /app/data /app/milvus_data

# 设置 Milvus 数据目录权限
RUN chmod 755 /app/milvus_data

# 暴露端口
EXPOSE 8000

# 健康检查
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD python -c "import requests; requests.get('http://localhost:8000/health') if requests.get('http://localhost:8000/health').status_code == 200 else exit(1)"
# HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
#     CMD curl -f http://localhost:8000/health || exit 1

# 启动命令
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
